<?xml version="1.0" encoding="UTF-8"?>
<project name="ADC Dusk2Dawn Sensor" version="2.9.0.208">
    <desc><![CDATA[This is the fNIRS firmware application file adapted from the Dusk2Dawn example. All application code is here but the project must be compiled in Code Composer Studio with the correct software versions.

Compiler version TI v5.2.6
TI RTOS 2.20.1.08]]></desc>
    <pattr name="Apply default power mode">0</pattr>
    <pattr name="Board">None</pattr>
    <pattr name="Chip name">CC2650</pattr>
    <pattr name="Chip package">QFN32 5x5 RHB</pattr>
    <pattr name="Chip revision">-</pattr>
    <pattr name="Clock in active mode">0</pattr>
    <pattr name="Code prefix"></pattr>
    <pattr name="Default power mode">0</pattr>
    <pattr name="Operating system">TI-RTOS</pattr>
    <pattr name="Output directory">./</pattr>
    <pattr name="RTC tick interval (16.16 format)">2000</pattr>
    <pattr name="Run-time logging UART RX pin"></pattr>
    <pattr name="Run-time logging UART TX pin"></pattr>
    <task name="Dusk2Dawn">
        <desc><![CDATA[]]></desc>
        <tattr name="cfg.lowBatteryEnd" desc="The value above which the battery is no longer considered low. (3.6 V =&gt; 1.8V =&gt; 1714)" type="expr" content="struct" scope="task" min="0" max="65535">1714</tattr>
        <tattr name="cfg.lowBatteryStart" desc="The value below which the battery is considered low. (3.5 V =&gt; 1.75V =&gt; 1667)" type="expr" content="struct" scope="task" min="0" max="65535">1667</tattr>
        <tattr name="input.enableLowPowerMode" desc="Enables low power mode where the high voltage power supply and LED scanning is disabled. (0 is not enabled, 1 is enabled)" type="expr" content="struct" scope="task" min="0" max="65535">0</tattr>
        <tattr name="input.setDutyCycle" desc="Sets the duty cycle of the LED during scanning. (0 is 0%, 1 is 20%, 2 is 40%, 3 is 60% , 4 is 80%, 5 is 100%)" type="expr" content="struct" scope="task" min="0" max="65535">5</tattr>
        <tattr name="output.adcValue1" desc="Analog value read from Sensor 1 during 730 nm light period." type="expr" content="struct" scope="task" min="0" max="65535">0</tattr>
        <tattr name="output.adcValue2" desc="Analog value read from Sensor 2 during 730 nm light period." type="expr" content="struct" scope="task" min="0" max="65535">0</tattr>
        <tattr name="output.adcValue3" desc="Analog value read from Sensor 1 during 850 nm light period." type="expr" content="struct" scope="task" min="0" max="65535">0</tattr>
        <tattr name="output.adcValue4" desc="Analog value read from Sensor 2 during 850 nm light period." type="expr" content="struct" scope="task" min="0" max="65535">0</tattr>
        <tattr name="output.batteryValue" desc="Analog value read from battery voltage." type="expr" content="struct" scope="task" min="0" max="65535">2200</tattr>
        <tattr name="output.chargeValue" desc="Digital value read from charge controller monitor. (0 is charging, 1 is not charging)" type="expr" content="struct" scope="task" min="0" max="65535">1</tattr>
        <tattr name="output.dutyCycleStatus" desc="The current duty cycle state. (0 is 0%, 1 is 20%, 2 is 40%, 3 is 60% , 4 is 80%, 5 is 100%)" type="expr" content="struct" scope="task" min="0" max="65535">5</tattr>
        <tattr name="output.lowBatteryStatus" desc="Indicates if the battery is currently low or not. (0 is not low, 1 is low)" type="expr" content="struct" scope="task" min="0" max="65535">0</tattr>
        <tattr name="output.powerModeStatus" desc="The current power mode state. (0 is normal, 1 is low power mode)" type="expr" content="struct" scope="task" min="0" max="65535">0</tattr>
        <tattr name="output.powerValue" desc="Digital value read from power good monitor. (0 is off, 1 is on)" type="expr" content="struct" scope="task" min="0" max="65535">0</tattr>
        <tattr name="output.usbValue" desc="Digital value read from USB power monitor. (0 is no USB power, 1 is USB power)" type="expr" content="struct" scope="task" min="0" max="65535">0</tattr>
        <tattr name="state.loop" desc="Keeps track of loop count" type="expr" content="struct" scope="task" min="0" max="65535">0</tattr>
        <resource_ref name="ADC" enabled="1"/>
        <resource_ref name="AON Domain Functionality" enabled="0"/>
        <resource_ref name="Accumulator-Based Math" enabled="0"/>
        <resource_ref name="Analog Open-Drain Pins" enabled="0"/>
        <resource_ref name="Analog Open-Source Pins" enabled="0"/>
        <resource_ref name="Analog Pins" enabled="1">
            <io_usage name="SEN1" label="Sensor 1">
                <uattr name="Pin count">0</uattr>
                <uattr name="Pin/0000">DIO13</uattr>
                <uattr name="Pin/0001"></uattr>
                <uattr name="Pin/0002"></uattr>
                <uattr name="Pin/0003"></uattr>
                <uattr name="Pin/0004"></uattr>
                <uattr name="Pin/0005"></uattr>
                <uattr name="Pin/0006"></uattr>
                <uattr name="Pin/0007"></uattr>
            </io_usage>
            <io_usage name="SEN2" label="Sensor 2">
                <uattr name="Pin count">0</uattr>
                <uattr name="Pin/0000">DIO11</uattr>
                <uattr name="Pin/0001"></uattr>
                <uattr name="Pin/0002"></uattr>
                <uattr name="Pin/0003"></uattr>
                <uattr name="Pin/0004"></uattr>
                <uattr name="Pin/0005"></uattr>
                <uattr name="Pin/0006"></uattr>
                <uattr name="Pin/0007"></uattr>
            </io_usage>
            <io_usage name="BAT_MON" label="Battery Monitor">
                <uattr name="Pin count">0</uattr>
                <uattr name="Pin/0000">DIO7</uattr>
                <uattr name="Pin/0001"></uattr>
                <uattr name="Pin/0002"></uattr>
                <uattr name="Pin/0003"></uattr>
                <uattr name="Pin/0004"></uattr>
                <uattr name="Pin/0005"></uattr>
                <uattr name="Pin/0006"></uattr>
                <uattr name="Pin/0007"></uattr>
            </io_usage>
        </resource_ref>
        <resource_ref name="COMPA" enabled="0"/>
        <resource_ref name="COMPA Event Trigger" enabled="0"/>
        <resource_ref name="COMPB" enabled="0"/>
        <resource_ref name="COMPB Event Trigger" enabled="0"/>
        <resource_ref name="Delay Insertion" enabled="1"/>
        <resource_ref name="Differential Output Pins" enabled="0"/>
        <resource_ref name="Digital Input Pins" enabled="1">
            <io_usage name="USB_MON" label="USB Power Monitor">
                <uattr name="Configuration on initialization">-1</uattr>
                <uattr name="Configuration on uninitialization">-1</uattr>
                <uattr name="Pin count">0</uattr>
                <uattr name="Pin/0000">DIO9</uattr>
                <uattr name="Pin/0001"></uattr>
                <uattr name="Pin/0002"></uattr>
                <uattr name="Pin/0003"></uattr>
                <uattr name="Pin/0004"></uattr>
                <uattr name="Pin/0005"></uattr>
                <uattr name="Pin/0006"></uattr>
                <uattr name="Pin/0007"></uattr>
                <uattr name="Pin/0008"></uattr>
                <uattr name="Pin/0009"></uattr>
                <uattr name="Pin/0010"></uattr>
                <uattr name="Pin/0011"></uattr>
                <uattr name="Pin/0012"></uattr>
                <uattr name="Pin/0013"></uattr>
                <uattr name="Pin/0014"></uattr>
                <uattr name="Pin/0015"></uattr>
                <uattr name="Pin/0016"></uattr>
                <uattr name="Pin/0017"></uattr>
                <uattr name="Pin/0018"></uattr>
                <uattr name="Pin/0019"></uattr>
                <uattr name="Pin/0020"></uattr>
                <uattr name="Pin/0021"></uattr>
                <uattr name="Pin/0022"></uattr>
                <uattr name="Pin/0023"></uattr>
                <uattr name="Pin/0024"></uattr>
                <uattr name="Pin/0025"></uattr>
                <uattr name="Pin/0026"></uattr>
                <uattr name="Pin/0027"></uattr>
                <uattr name="Pin/0028"></uattr>
                <uattr name="Pin/0029"></uattr>
                <uattr name="Pin/0030"></uattr>
                <uattr name="Pin/0031"></uattr>
            </io_usage>
            <io_usage name="CHG_MON" label="Charge Controller Monitor">
                <uattr name="Configuration on initialization">-1</uattr>
                <uattr name="Configuration on uninitialization">-1</uattr>
                <uattr name="Pin count">0</uattr>
                <uattr name="Pin/0000">DIO8</uattr>
                <uattr name="Pin/0001"></uattr>
                <uattr name="Pin/0002"></uattr>
                <uattr name="Pin/0003"></uattr>
                <uattr name="Pin/0004"></uattr>
                <uattr name="Pin/0005"></uattr>
                <uattr name="Pin/0006"></uattr>
                <uattr name="Pin/0007"></uattr>
                <uattr name="Pin/0008"></uattr>
                <uattr name="Pin/0009"></uattr>
                <uattr name="Pin/0010"></uattr>
                <uattr name="Pin/0011"></uattr>
                <uattr name="Pin/0012"></uattr>
                <uattr name="Pin/0013"></uattr>
                <uattr name="Pin/0014"></uattr>
                <uattr name="Pin/0015"></uattr>
                <uattr name="Pin/0016"></uattr>
                <uattr name="Pin/0017"></uattr>
                <uattr name="Pin/0018"></uattr>
                <uattr name="Pin/0019"></uattr>
                <uattr name="Pin/0020"></uattr>
                <uattr name="Pin/0021"></uattr>
                <uattr name="Pin/0022"></uattr>
                <uattr name="Pin/0023"></uattr>
                <uattr name="Pin/0024"></uattr>
                <uattr name="Pin/0025"></uattr>
                <uattr name="Pin/0026"></uattr>
                <uattr name="Pin/0027"></uattr>
                <uattr name="Pin/0028"></uattr>
                <uattr name="Pin/0029"></uattr>
                <uattr name="Pin/0030"></uattr>
                <uattr name="Pin/0031"></uattr>
            </io_usage>
            <io_usage name="PG_MON" label="High Voltage Supply Power Good Monitor">
                <uattr name="Configuration on initialization">-1</uattr>
                <uattr name="Configuration on uninitialization">-1</uattr>
                <uattr name="Pin count">0</uattr>
                <uattr name="Pin/0000">DIO1</uattr>
                <uattr name="Pin/0001"></uattr>
                <uattr name="Pin/0002"></uattr>
                <uattr name="Pin/0003"></uattr>
                <uattr name="Pin/0004"></uattr>
                <uattr name="Pin/0005"></uattr>
                <uattr name="Pin/0006"></uattr>
                <uattr name="Pin/0007"></uattr>
                <uattr name="Pin/0008"></uattr>
                <uattr name="Pin/0009"></uattr>
                <uattr name="Pin/0010"></uattr>
                <uattr name="Pin/0011"></uattr>
                <uattr name="Pin/0012"></uattr>
                <uattr name="Pin/0013"></uattr>
                <uattr name="Pin/0014"></uattr>
                <uattr name="Pin/0015"></uattr>
                <uattr name="Pin/0016"></uattr>
                <uattr name="Pin/0017"></uattr>
                <uattr name="Pin/0018"></uattr>
                <uattr name="Pin/0019"></uattr>
                <uattr name="Pin/0020"></uattr>
                <uattr name="Pin/0021"></uattr>
                <uattr name="Pin/0022"></uattr>
                <uattr name="Pin/0023"></uattr>
                <uattr name="Pin/0024"></uattr>
                <uattr name="Pin/0025"></uattr>
                <uattr name="Pin/0026"></uattr>
                <uattr name="Pin/0027"></uattr>
                <uattr name="Pin/0028"></uattr>
                <uattr name="Pin/0029"></uattr>
                <uattr name="Pin/0030"></uattr>
                <uattr name="Pin/0031"></uattr>
            </io_usage>
        </resource_ref>
        <resource_ref name="Digital Open-Drain Pins" enabled="0"/>
        <resource_ref name="Digital Open-Source Pins" enabled="0"/>
        <resource_ref name="Digital Output Pins" enabled="1">
            <io_usage name="EN_850" label="Enable 850nm Wavelength fNIR LED">
                <uattr name="Configuration on uninitialization">-1</uattr>
                <uattr name="Output drive strength">0</uattr>
                <uattr name="Output value on initialization">0</uattr>
                <uattr name="Pin count">0</uattr>
                <uattr name="Pin/0000">DIO12</uattr>
                <uattr name="Pin/0001"></uattr>
                <uattr name="Pin/0002"></uattr>
                <uattr name="Pin/0003"></uattr>
                <uattr name="Pin/0004"></uattr>
                <uattr name="Pin/0005"></uattr>
                <uattr name="Pin/0006"></uattr>
                <uattr name="Pin/0007"></uattr>
                <uattr name="Pin/0008"></uattr>
                <uattr name="Pin/0009"></uattr>
                <uattr name="Pin/0010"></uattr>
                <uattr name="Pin/0011"></uattr>
                <uattr name="Pin/0012"></uattr>
                <uattr name="Pin/0013"></uattr>
                <uattr name="Pin/0014"></uattr>
                <uattr name="Pin/0015"></uattr>
                <uattr name="Pin/0016"></uattr>
                <uattr name="Pin/0017"></uattr>
                <uattr name="Pin/0018"></uattr>
                <uattr name="Pin/0019"></uattr>
                <uattr name="Pin/0020"></uattr>
                <uattr name="Pin/0021"></uattr>
                <uattr name="Pin/0022"></uattr>
                <uattr name="Pin/0023"></uattr>
                <uattr name="Pin/0024"></uattr>
                <uattr name="Pin/0025"></uattr>
                <uattr name="Pin/0026"></uattr>
                <uattr name="Pin/0027"></uattr>
                <uattr name="Pin/0028"></uattr>
                <uattr name="Pin/0029"></uattr>
                <uattr name="Pin/0030"></uattr>
                <uattr name="Pin/0031"></uattr>
            </io_usage>
            <io_usage name="EN_730" label="Enable 730nm Wavelength fNIR LED">
                <uattr name="Configuration on uninitialization">-1</uattr>
                <uattr name="Output drive strength">0</uattr>
                <uattr name="Output value on initialization">0</uattr>
                <uattr name="Pin count">0</uattr>
                <uattr name="Pin/0000">DIO14</uattr>
                <uattr name="Pin/0001"></uattr>
                <uattr name="Pin/0002"></uattr>
                <uattr name="Pin/0003"></uattr>
                <uattr name="Pin/0004"></uattr>
                <uattr name="Pin/0005"></uattr>
                <uattr name="Pin/0006"></uattr>
                <uattr name="Pin/0007"></uattr>
                <uattr name="Pin/0008"></uattr>
                <uattr name="Pin/0009"></uattr>
                <uattr name="Pin/0010"></uattr>
                <uattr name="Pin/0011"></uattr>
                <uattr name="Pin/0012"></uattr>
                <uattr name="Pin/0013"></uattr>
                <uattr name="Pin/0014"></uattr>
                <uattr name="Pin/0015"></uattr>
                <uattr name="Pin/0016"></uattr>
                <uattr name="Pin/0017"></uattr>
                <uattr name="Pin/0018"></uattr>
                <uattr name="Pin/0019"></uattr>
                <uattr name="Pin/0020"></uattr>
                <uattr name="Pin/0021"></uattr>
                <uattr name="Pin/0022"></uattr>
                <uattr name="Pin/0023"></uattr>
                <uattr name="Pin/0024"></uattr>
                <uattr name="Pin/0025"></uattr>
                <uattr name="Pin/0026"></uattr>
                <uattr name="Pin/0027"></uattr>
                <uattr name="Pin/0028"></uattr>
                <uattr name="Pin/0029"></uattr>
                <uattr name="Pin/0030"></uattr>
                <uattr name="Pin/0031"></uattr>
            </io_usage>
            <io_usage name="EN_805" label="Enable 805nm Wavelength fNIR LED">
                <uattr name="Configuration on uninitialization">-1</uattr>
                <uattr name="Output drive strength">0</uattr>
                <uattr name="Output value on initialization">0</uattr>
                <uattr name="Pin count">0</uattr>
                <uattr name="Pin/0000">DIO10</uattr>
                <uattr name="Pin/0001"></uattr>
                <uattr name="Pin/0002"></uattr>
                <uattr name="Pin/0003"></uattr>
                <uattr name="Pin/0004"></uattr>
                <uattr name="Pin/0005"></uattr>
                <uattr name="Pin/0006"></uattr>
                <uattr name="Pin/0007"></uattr>
                <uattr name="Pin/0008"></uattr>
                <uattr name="Pin/0009"></uattr>
                <uattr name="Pin/0010"></uattr>
                <uattr name="Pin/0011"></uattr>
                <uattr name="Pin/0012"></uattr>
                <uattr name="Pin/0013"></uattr>
                <uattr name="Pin/0014"></uattr>
                <uattr name="Pin/0015"></uattr>
                <uattr name="Pin/0016"></uattr>
                <uattr name="Pin/0017"></uattr>
                <uattr name="Pin/0018"></uattr>
                <uattr name="Pin/0019"></uattr>
                <uattr name="Pin/0020"></uattr>
                <uattr name="Pin/0021"></uattr>
                <uattr name="Pin/0022"></uattr>
                <uattr name="Pin/0023"></uattr>
                <uattr name="Pin/0024"></uattr>
                <uattr name="Pin/0025"></uattr>
                <uattr name="Pin/0026"></uattr>
                <uattr name="Pin/0027"></uattr>
                <uattr name="Pin/0028"></uattr>
                <uattr name="Pin/0029"></uattr>
                <uattr name="Pin/0030"></uattr>
                <uattr name="Pin/0031"></uattr>
            </io_usage>
            <io_usage name="LED_Y" label="Yellow LED">
                <uattr name="Configuration on uninitialization">-1</uattr>
                <uattr name="Output drive strength">2</uattr>
                <uattr name="Output value on initialization">0</uattr>
                <uattr name="Pin count">0</uattr>
                <uattr name="Pin/0000">DIO3</uattr>
                <uattr name="Pin/0001"></uattr>
                <uattr name="Pin/0002"></uattr>
                <uattr name="Pin/0003"></uattr>
                <uattr name="Pin/0004"></uattr>
                <uattr name="Pin/0005"></uattr>
                <uattr name="Pin/0006"></uattr>
                <uattr name="Pin/0007"></uattr>
                <uattr name="Pin/0008"></uattr>
                <uattr name="Pin/0009"></uattr>
                <uattr name="Pin/0010"></uattr>
                <uattr name="Pin/0011"></uattr>
                <uattr name="Pin/0012"></uattr>
                <uattr name="Pin/0013"></uattr>
                <uattr name="Pin/0014"></uattr>
                <uattr name="Pin/0015"></uattr>
                <uattr name="Pin/0016"></uattr>
                <uattr name="Pin/0017"></uattr>
                <uattr name="Pin/0018"></uattr>
                <uattr name="Pin/0019"></uattr>
                <uattr name="Pin/0020"></uattr>
                <uattr name="Pin/0021"></uattr>
                <uattr name="Pin/0022"></uattr>
                <uattr name="Pin/0023"></uattr>
                <uattr name="Pin/0024"></uattr>
                <uattr name="Pin/0025"></uattr>
                <uattr name="Pin/0026"></uattr>
                <uattr name="Pin/0027"></uattr>
                <uattr name="Pin/0028"></uattr>
                <uattr name="Pin/0029"></uattr>
                <uattr name="Pin/0030"></uattr>
                <uattr name="Pin/0031"></uattr>
            </io_usage>
            <io_usage name="LED_R" label="Red LED">
                <uattr name="Configuration on uninitialization">-1</uattr>
                <uattr name="Output drive strength">2</uattr>
                <uattr name="Output value on initialization">0</uattr>
                <uattr name="Pin count">0</uattr>
                <uattr name="Pin/0000">DIO4</uattr>
                <uattr name="Pin/0001"></uattr>
                <uattr name="Pin/0002"></uattr>
                <uattr name="Pin/0003"></uattr>
                <uattr name="Pin/0004"></uattr>
                <uattr name="Pin/0005"></uattr>
                <uattr name="Pin/0006"></uattr>
                <uattr name="Pin/0007"></uattr>
                <uattr name="Pin/0008"></uattr>
                <uattr name="Pin/0009"></uattr>
                <uattr name="Pin/0010"></uattr>
                <uattr name="Pin/0011"></uattr>
                <uattr name="Pin/0012"></uattr>
                <uattr name="Pin/0013"></uattr>
                <uattr name="Pin/0014"></uattr>
                <uattr name="Pin/0015"></uattr>
                <uattr name="Pin/0016"></uattr>
                <uattr name="Pin/0017"></uattr>
                <uattr name="Pin/0018"></uattr>
                <uattr name="Pin/0019"></uattr>
                <uattr name="Pin/0020"></uattr>
                <uattr name="Pin/0021"></uattr>
                <uattr name="Pin/0022"></uattr>
                <uattr name="Pin/0023"></uattr>
                <uattr name="Pin/0024"></uattr>
                <uattr name="Pin/0025"></uattr>
                <uattr name="Pin/0026"></uattr>
                <uattr name="Pin/0027"></uattr>
                <uattr name="Pin/0028"></uattr>
                <uattr name="Pin/0029"></uattr>
                <uattr name="Pin/0030"></uattr>
                <uattr name="Pin/0031"></uattr>
            </io_usage>
            <io_usage name="LED_G" label="Green LED">
                <uattr name="Configuration on uninitialization">-1</uattr>
                <uattr name="Output drive strength">2</uattr>
                <uattr name="Output value on initialization">0</uattr>
                <uattr name="Pin count">0</uattr>
                <uattr name="Pin/0000">DIO2</uattr>
                <uattr name="Pin/0001"></uattr>
                <uattr name="Pin/0002"></uattr>
                <uattr name="Pin/0003"></uattr>
                <uattr name="Pin/0004"></uattr>
                <uattr name="Pin/0005"></uattr>
                <uattr name="Pin/0006"></uattr>
                <uattr name="Pin/0007"></uattr>
                <uattr name="Pin/0008"></uattr>
                <uattr name="Pin/0009"></uattr>
                <uattr name="Pin/0010"></uattr>
                <uattr name="Pin/0011"></uattr>
                <uattr name="Pin/0012"></uattr>
                <uattr name="Pin/0013"></uattr>
                <uattr name="Pin/0014"></uattr>
                <uattr name="Pin/0015"></uattr>
                <uattr name="Pin/0016"></uattr>
                <uattr name="Pin/0017"></uattr>
                <uattr name="Pin/0018"></uattr>
                <uattr name="Pin/0019"></uattr>
                <uattr name="Pin/0020"></uattr>
                <uattr name="Pin/0021"></uattr>
                <uattr name="Pin/0022"></uattr>
                <uattr name="Pin/0023"></uattr>
                <uattr name="Pin/0024"></uattr>
                <uattr name="Pin/0025"></uattr>
                <uattr name="Pin/0026"></uattr>
                <uattr name="Pin/0027"></uattr>
                <uattr name="Pin/0028"></uattr>
                <uattr name="Pin/0029"></uattr>
                <uattr name="Pin/0030"></uattr>
                <uattr name="Pin/0031"></uattr>
            </io_usage>
            <io_usage name="EN_RUN" label="Enable High Voltage Power Supply">
                <uattr name="Configuration on uninitialization">-1</uattr>
                <uattr name="Output drive strength">0</uattr>
                <uattr name="Output value on initialization">0</uattr>
                <uattr name="Pin count">0</uattr>
                <uattr name="Pin/0000">DIO0</uattr>
                <uattr name="Pin/0001"></uattr>
                <uattr name="Pin/0002"></uattr>
                <uattr name="Pin/0003"></uattr>
                <uattr name="Pin/0004"></uattr>
                <uattr name="Pin/0005"></uattr>
                <uattr name="Pin/0006"></uattr>
                <uattr name="Pin/0007"></uattr>
                <uattr name="Pin/0008"></uattr>
                <uattr name="Pin/0009"></uattr>
                <uattr name="Pin/0010"></uattr>
                <uattr name="Pin/0011"></uattr>
                <uattr name="Pin/0012"></uattr>
                <uattr name="Pin/0013"></uattr>
                <uattr name="Pin/0014"></uattr>
                <uattr name="Pin/0015"></uattr>
                <uattr name="Pin/0016"></uattr>
                <uattr name="Pin/0017"></uattr>
                <uattr name="Pin/0018"></uattr>
                <uattr name="Pin/0019"></uattr>
                <uattr name="Pin/0020"></uattr>
                <uattr name="Pin/0021"></uattr>
                <uattr name="Pin/0022"></uattr>
                <uattr name="Pin/0023"></uattr>
                <uattr name="Pin/0024"></uattr>
                <uattr name="Pin/0025"></uattr>
                <uattr name="Pin/0026"></uattr>
                <uattr name="Pin/0027"></uattr>
                <uattr name="Pin/0028"></uattr>
                <uattr name="Pin/0029"></uattr>
                <uattr name="Pin/0030"></uattr>
                <uattr name="Pin/0031"></uattr>
            </io_usage>
        </resource_ref>
        <resource_ref name="Dynamic Power Control" enabled="0"/>
        <resource_ref name="GPIO Event Trigger" enabled="0"/>
        <resource_ref name="I2C Master" enabled="0">
            <rattr name="SCL frequency">0</rattr>
            <rattr name="SCL stretch timeout">1</rattr>
            <io_usage>
                <uattr name="Output drive strength">1</uattr>
                <uattr name="SCL pin/0000"></uattr>
                <uattr name="SDA pin/0000"></uattr>
            </io_usage>
        </resource_ref>
        <resource_ref name="ISRC" enabled="0"/>
        <resource_ref name="LCD Controller" enabled="0">
            <rattr name="Waveform state count">8</rattr>
            <io_usage>
                <uattr name="Output drive strength">0</uattr>
                <uattr name="Pin count">20</uattr>
                <uattr name="Pin/0000"></uattr>
                <uattr name="Pin/0001"></uattr>
                <uattr name="Pin/0002"></uattr>
                <uattr name="Pin/0003"></uattr>
                <uattr name="Pin/0004"></uattr>
                <uattr name="Pin/0005"></uattr>
                <uattr name="Pin/0006"></uattr>
                <uattr name="Pin/0007"></uattr>
                <uattr name="Pin/0008"></uattr>
                <uattr name="Pin/0009"></uattr>
                <uattr name="Pin/0010"></uattr>
                <uattr name="Pin/0011"></uattr>
                <uattr name="Pin/0012"></uattr>
                <uattr name="Pin/0013"></uattr>
                <uattr name="Pin/0014"></uattr>
                <uattr name="Pin/0015"></uattr>
                <uattr name="Pin/0016"></uattr>
                <uattr name="Pin/0017"></uattr>
                <uattr name="Pin/0018"></uattr>
                <uattr name="Pin/0019"></uattr>
                <uattr name="Pin/0020"></uattr>
                <uattr name="Pin/0021"></uattr>
                <uattr name="Pin/0022"></uattr>
                <uattr name="Pin/0023"></uattr>
                <uattr name="Pin/0024"></uattr>
                <uattr name="Pin/0025"></uattr>
                <uattr name="Pin/0026"></uattr>
                <uattr name="Pin/0027"></uattr>
                <uattr name="Pin/0028"></uattr>
                <uattr name="Pin/0029"></uattr>
                <uattr name="Pin/0030"></uattr>
                <uattr name="Pin/0031"></uattr>
            </io_usage>
        </resource_ref>
        <resource_ref name="Math and Logic" enabled="0"/>
        <resource_ref name="Multi-Buffered Output Data Exchange" enabled="0">
            <rattr name="Buffer count">2</rattr>
            <rattr name="Indicate overflow at buffer check">1</rattr>
            <rattr name="Indicate overflow at buffer switch">0</rattr>
            <rattr name="Prevent overflow at buffer switch">1</rattr>
        </resource_ref>
        <resource_ref name="Peripheral Sharing" enabled="0"/>
        <resource_ref name="Pulse Counter" enabled="0"/>
        <resource_ref name="RTC Multi-Event Capture" enabled="0"/>
        <resource_ref name="RTC-Based Execution Scheduling" enabled="1"/>
        <resource_ref name="Reference DAC" enabled="0"/>
        <resource_ref name="Run-Time Logging" enabled="0"/>
        <resource_ref name="SPI Chip Select" enabled="0"/>
        <resource_ref name="SPI Data Transfer" enabled="0">
            <rattr name="Bit rate">0</rattr>
            <rattr name="MISO configuration when inactive">-1</rattr>
            <rattr name="MOSI configuration on initialization">0</rattr>
            <rattr name="MOSI configuration on uninitialization">0</rattr>
            <rattr name="SCLK configuration on initialization">0</rattr>
            <rattr name="SCLK configuration on uninitialization">0</rattr>
            <io_usage>
                <uattr name="MISO pin/0000"></uattr>
                <uattr name="MOSI pin/0000"></uattr>
                <uattr name="SCLK pin/0000"></uattr>
            </io_usage>
        </resource_ref>
        <resource_ref name="Signal Observation" enabled="0"/>
        <resource_ref name="System CPU Alert" enabled="1"/>
        <resource_ref name="System Event Trigger" enabled="0"/>
        <resource_ref name="TDC" enabled="0"/>
        <resource_ref name="Timer 0" enabled="0"/>
        <resource_ref name="Timer 0 Event Trigger" enabled="0"/>
        <resource_ref name="Timer 1" enabled="0"/>
        <resource_ref name="Timer 1 Event Trigger" enabled="0"/>
        <resource_ref name="Timer 2" enabled="0"/>
        <resource_ref name="Timer 2 Event Trigger" enabled="0"/>
        <resource_ref name="UART Emulator" enabled="0">
            <rattr name="RX buffer size">64</rattr>
            <rattr name="Required idle period before enabling RX">11</rattr>
            <rattr name="TX buffer size">64</rattr>
            <io_usage>
                <uattr name="RX pin/0000"></uattr>
                <uattr name="TX pin/0000"></uattr>
            </io_usage>
        </resource_ref>
        <sccode name="event0" init_power_mode="0"><![CDATA[]]></sccode>
        <sccode name="event1" init_power_mode="0"><![CDATA[]]></sccode>
        <sccode name="event2" init_power_mode="0"><![CDATA[]]></sccode>
        <sccode name="event3" init_power_mode="0"><![CDATA[]]></sccode>
        <sccode name="execute" init_power_mode="0"><![CDATA[// ------------------------
// Handle inputs to program
// ------------------------

// Check if desired power mode is not the current power mode
if (input.enableLowPowerMode != output.powerModeStatus) {

    if (input.enableLowPowerMode == 0) {

        // Set power mode to normal and enable 8.2 V power supply
        output.powerModeStatus = 0;
        gpioSetOutput(AUXIO_O_EN_RUN);

    } else if (input.enableLowPowerMode == 1) {

        // Set power mode to low power mode and disable 8.2 V power supply
        output.powerModeStatus = 1;
        gpioClearOutput(AUXIO_O_EN_RUN);

    } else {

        // Bad lowPowerMode input, keep current mode

    }

}

// Check if desired duty cycle is not the current duty cycle
if (input.setDutyCycle != output.dutyCycleStatus) {

    // Set duty cycle to desired value if it is valid
    if (input.setDutyCycle <= 5) {

        // Set duty cycle to the selected input
        output.dutyCycleStatus = input.setDutyCycle;

    } else {

        // Bad setDutyCycle input, keep current duty cycle

    }

}

// ----------------------------------------------------------
// Sample analog and digital inputs that are not the fNIR LED
// ----------------------------------------------------------

// Increment the loop number
state.loop = state.loop + 1;

// Sample battery voltage only once every 30 loops (Once every three seconds)
if (state.loop > 29) {

    // Reset loop number
    state.loop = 0;

    // Select Battery Monitor as the ADC input
    adcSelectGpioInput(AUXIO_A_BAT_MON);

    // Enable the ADC (fixed reference, 2.7 us sample time, manual trigger)
    adcEnableSync(ADC_REF_FIXED, ADC_SAMPLE_TIME_2P7_US, ADC_TRIGGER_MANUAL);

    // Sample the sensor and store the ADC value in batteryValue
    adcGenManualTrigger();
    adcReadFifo(output.batteryValue);

    // Disable the ADC
    adcDisable();

}

// Read charge controller voltage and store in chargeValue
gpioGetInputValue(AUXIO_I_CHG_MON; output.chargeValue);

// Read USB power monitor voltage and store in usbValue
gpioGetInputValue(AUXIO_I_USB_MON; output.usbValue);

// Read power good monitor and store in powerValue
gpioGetInputValue(AUXIO_I_PG_MON; output.powerValue);

// Wait 20 ms
fwDelayUs(20000, FW_DELAY_RANGE_100_MS);

// -----------------------------
// Sample analog fNIR LED values
// -----------------------------

// Update values in normal mode, set values to zero in low power mode
if (output.powerModeStatus == 0) {

    // Update values only if power supply reports it is on, otherwise keep previous values
    if (output.powerValue == 1) {

        // --------------------------------------------------------------------------------------------------------
        // Read from Sensor 1 at 730 nm and store in adcValue1, Read from Sensor 2 at 730 nm and store in adcValue2
        // --------------------------------------------------------------------------------------------------------

        // Turn on 730 nm LED according to desired duty cycle (For 30ms if a pulse train)
        if (output.dutyCycleStatus == 0) {
            gpioClearOutput(AUXIO_O_EN_730);
        } else if (output.dutyCycleStatus == 1) {
            gpioGenPulseTrain(AUXIO_O_EN_730, 1, 2, 8, 36000);
        } else if (output.dutyCycleStatus == 2) {
            gpioGenPulseTrain(AUXIO_O_EN_730, 1, 4, 6, 36000);
        } else if (output.dutyCycleStatus == 3) {
            gpioGenPulseTrain(AUXIO_O_EN_730, 0, 4, 6, 36000);
        } else if (output.dutyCycleStatus == 4) {
            gpioGenPulseTrain(AUXIO_O_EN_730, 0, 2, 8, 36000);
        } else {
            gpioSetOutput(AUXIO_O_EN_730);
        }

        // Wait 20 ms
        fwDelayUs(20000, FW_DELAY_RANGE_100_MS);

        // Select Sensor 1 as the ADC input
        adcSelectGpioInput(AUXIO_A_SEN1);

        // Enable the ADC (fixed reference, 2.7 us sample time, manual trigger)
        adcEnableSync(ADC_REF_FIXED, ADC_SAMPLE_TIME_2P7_US, ADC_TRIGGER_MANUAL);

        // Sample the sensor and store the ADC value
        adcGenManualTrigger();
        adcReadFifo(output.adcValue1);

        // Disable the ADC
        adcDisable();

        // Select Sensor 2 as the ADC input
        adcSelectGpioInput(AUXIO_A_SEN2);

        // Enable the ADC (fixed reference, 2.7 us sample time, manual trigger)
        adcEnableSync(ADC_REF_FIXED, ADC_SAMPLE_TIME_2P7_US, ADC_TRIGGER_MANUAL);

        // Sample the sensor and store the ADC value
        adcGenManualTrigger();
        adcReadFifo(output.adcValue2);

        // Disable the ADC
        adcDisable();

        // Turn off 730 nm on fNIR LED
        gpioClearOutput(AUXIO_O_EN_730);

        // Wait 20 ms
        fwDelayUs(20000, FW_DELAY_RANGE_100_MS);

        // --------------------------------------------------------------------------------------------------------
        // Read from Sensor 1 at 850 nm and store in adcValue3, Read from Sensor 2 at 850 nm and store in adcValue4
        // --------------------------------------------------------------------------------------------------------

        // Turn on 850 nm LED according to desired duty cycle (For 30ms if a pulse train)
        if (output.dutyCycleStatus == 0) {
            gpioClearOutput(AUXIO_O_EN_850);
        } else if (output.dutyCycleStatus == 1) {
            gpioGenPulseTrain(AUXIO_O_EN_850, 1, 2, 8, 36000);
        } else if (output.dutyCycleStatus == 2) {
            gpioGenPulseTrain(AUXIO_O_EN_850, 1, 4, 6, 36000);
        } else if (output.dutyCycleStatus == 3) {
            gpioGenPulseTrain(AUXIO_O_EN_850, 0, 4, 6, 36000);
        } else if (output.dutyCycleStatus == 4) {
            gpioGenPulseTrain(AUXIO_O_EN_850, 0, 2, 8, 36000);
        } else {
            gpioSetOutput(AUXIO_O_EN_850);
        }

        // Wait 20 ms
        fwDelayUs(20000, FW_DELAY_RANGE_100_MS);

        // Select Sensor 1 as the ADC input
        adcSelectGpioInput(AUXIO_A_SEN1);

        // Enable the ADC (fixed reference, 2.7 us sample time, manual trigger)
        adcEnableSync(ADC_REF_FIXED, ADC_SAMPLE_TIME_2P7_US, ADC_TRIGGER_MANUAL);

        // Sample the sensor and store the ADC value
        adcGenManualTrigger();
        adcReadFifo(output.adcValue3);

        // Disable the ADC
        adcDisable();

        // Select Sensor 2 as the ADC input
        adcSelectGpioInput(AUXIO_A_SEN2);

        // Enable the ADC (fixed reference, 2.7 us sample time, manual trigger)
        adcEnableSync(ADC_REF_FIXED, ADC_SAMPLE_TIME_2P7_US, ADC_TRIGGER_MANUAL);

        // Sample the sensor and store the ADC value
        adcGenManualTrigger();
        adcReadFifo(output.adcValue4);

        // Disable the ADC
        adcDisable();

        // Turn off 850 nm on fNIR LED
        gpioClearOutput(AUXIO_O_EN_850);

        // Wait 20 ms
        fwDelayUs(20000, FW_DELAY_RANGE_100_MS);

    }

} else {

    // Set default ADC values
    output.adcValue1 = 0;
    output.adcValue2 = 0;
    output.adcValue3 = 0;
    output.adcValue4 = 0;

}

// ----------------------
// Set low battery status
// ----------------------

// Determine if battery is low or not with hysteresis
if (output.lowBatteryStatus == 0) {

    // If battery level drops too low, battery is low
    if (output.batteryValue < cfg.lowBatteryStart) {
        output.lowBatteryStatus = 1;
    }

} else if (output.lowBatteryStatus == 1) {

    // If battery level goes high, battery is no longer low
    if (output.batteryValue > cfg.lowBatteryEnd) {
        output.lowBatteryStatus = 0;
    }

} else {

    // Weird state happened, reset lowBattery
    output.lowBatteryStatus = 0;

}

// ------------------------------------------
// Turn on or off green, yellow, and red LEDs
// ------------------------------------------

// Turn on green LED only when USB power is plugged in
if (output.usbValue == 1) {
    gpioSetOutput(AUXIO_O_LED_G);
} else {
    gpioClearOutput(AUXIO_O_LED_G);
}

// Turn on yellow LED only when charge controller indictaes battery is charging
if (output.chargeValue == 0) {
    gpioSetOutput(AUXIO_O_LED_Y);
} else {
    gpioClearOutput(AUXIO_O_LED_Y);
}

// Turn on red LED only when battery level is low
if (output.lowBatteryStatus == 1) {
    gpioSetOutput(AUXIO_O_LED_R);
} else {
    gpioClearOutput(AUXIO_O_LED_R);
}

// Wait 10 ms
fwDelayUs(10000, FW_DELAY_RANGE_10_MS);

// ---------------------
// End of task execution
// ---------------------

// Generate alert
fwGenAlertInterrupt();

// Schedule the next execution at the next RTC tick
fwScheduleTask(1);]]></sccode>
        <sccode name="initialize" init_power_mode="0"><![CDATA[// Turn off 8.2 V power supply
gpioClearOutput(AUXIO_O_EN_RUN);

// Turn on Red, Yellow, and Green LED
gpioSetOutput(AUXIO_O_LED_R);
gpioSetOutput(AUXIO_O_LED_Y);
gpioSetOutput(AUXIO_O_LED_G);

// Wait 100 ms to display LEDs to user
fwDelayUs(100000, FW_DELAY_RANGE_100_MS);

// Turn on 8.2 V power supply
gpioSetOutput(AUXIO_O_EN_RUN);

// Wait here forever until 8.2 V power supply is ready while waiting 10 ms between checks
gpioGetInputValue(AUXIO_I_PG_MON; output.powerValue);
while (output.powerValue == 0) {
    fwDelayUs(10000, FW_DELAY_RANGE_10_MS);
    gpioGetInputValue(AUXIO_I_PG_MON; output.powerValue);
}

// Turn off Red, Yellow, and Green LED
gpioClearOutput(AUXIO_O_LED_R);
gpioClearOutput(AUXIO_O_LED_Y);
gpioClearOutput(AUXIO_O_LED_G);

// Schedule the first execution at the next RTC tick
fwScheduleTask(1);]]></sccode>
        <sccode name="terminate" init_power_mode="0"><![CDATA[]]></sccode>
        <event_trigger active_count="1">0,1,2,3</event_trigger>
        <tt_iter>run_execute</tt_iter>
        <tt_struct>state.dawn</tt_struct>
        <rtl_struct></rtl_struct>
        <rtl_task_sel en="1" struct_log_list="output"/>
    </task>
</project>
